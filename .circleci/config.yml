# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#

defaults: &defaults
  working_directory: ~/repo

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.7.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: lein deps

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

      # build jar
      - run: lein uberjar

      - run: mkdir -p artifact/target

      - run: cp target/aggregate-sag-lambda-0.1.0-SNAPSHOT-standalone.jar artifact/target

      - run: cp sam.yaml artifact

      - persist_to_workspace:
          root: artifact
          paths:
            - sam.yaml
            - target/aggregate-sag-lambda-0.1.0-SNAPSHOT-standalone.jar

  deploy:
    <<: *defaults
    docker:
      - image: wilson208/circleci-awscli # mesosphere/aws-cli

    steps:
      - attach_workspace:
          at: /tmp/artifact

   #   - run: cd /tmp/artifact

    #  - run: ls
      # build stack
      - run: aws cloudformation package --template-file /tmp/artifact/sam.yaml --s3-bucket sl.ice.cf.packages --output-template-file packaged-template.yaml #--profile sandbox

      - run: cat packaged-template.yaml
      # deploy stack
      - run: aws cloudformation deploy --template-file packaged-template.yaml --stack-name sod1 --capabilities CAPABILITY_IAM --region eu-west-1 --parameter-overrides Stage=dev # --profile sandbox

  deploy_test:
    <<: *defaults
    docker:
      - image: wilson208/circleci-awscli # mesosphere/aws-cli

    steps:
      - attach_workspace:
          at: /tmp/artifact

   #   - run: cd /tmp/artifact

    #  - run: ls
      # build stack
      - run: aws cloudformation package --template-file /tmp/artifact/sam.yaml --s3-bucket sl.ice.cf.packages --output-template-file packaged-template.yaml #--profile sandbox

      - run: cat packaged-template.yaml
      # deploy stack
      - run: aws cloudformation deploy --template-file packaged-template.yaml --stack-name sod1 --capabilities CAPABILITY_IAM --region eu-west-1 --parameter-overrides Stage=test # --profile sandbox

#  deploy_preprod:

#  deploy_prod:

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
      - hold-test:
          type: approval
          requires:
            - deploy
      - deploy_test:
          requires:
            - hold-test
#          filters:
#            tags:
#              only: test-.*
#      - hold-preprod:
#          type: approval
#          requires:
            - deploy_test
#      - deploy_preprod:
#          requires:
            - hold-preprod
#          filters:
#            tags:
#              only: preprod-.*
#      - hold-prod:
#          type: approval
#          requires:
            - deploy_preprod
#      - deploy_preprod:
#          requires:
            - hold-prod
#          filters:
#            tags:
#              only: prod-.*
